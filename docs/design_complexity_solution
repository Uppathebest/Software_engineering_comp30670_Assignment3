The design of my algorithm followed the following steps:

1) Read file from the Internet by argument parsing
2) Extract the right information (square size and instructions) from each line of the file and insert it into a tuple
3) Create a multidimensional array (2d array resembling a square matrix) using the square size found in the first line of the file
4) Count number of lights turned on in the square
5) Following the instructions in each line, loop through the square and switch on/off the lights accordingly
	and output the result at the end (how many lights are on) 


For each of these steps I have created a function. 
1) read_uri(file)
2) extract(line)
3) LED_TESTER(value)
4) lights_number(square)
5) turn_switch(file)




The complexity of my solution lies in the number of sanity checks I had to perform in each function 
	to ensure that I would get the right result (despite wrong instructions or misleading instructions).
	Furthermore, I tried, wherever possible to speed up the calculations as much as possible by avoiding
	to store information in variables, use as many loops as possible etc...

1) No sanity check needed
2) Stripped instructions off trailing whitespaces, checked that 4 integer coordinates were supplied
3) Checked that size of square is correct
4) No sanity check needed
5) Check that coordinates are correct compared to square and compared to each other